package jwt

import (
	"testing"
	"time"
)

type jwtStruct struct {
	Name string `json:"name"`
}

func TestEncode(t *testing.T) {
	jwt := jwtStruct{Name: "Olakunkle"}
	token, err := Encode("claims", []byte("mysecret"), time.Minute, jwt)
	if err != nil {
		t.Fatal(err)
	}

	if token == "" {
		t.Error("Expected EncodeJWT to generate a token")
	}
}

func TestDecode(t *testing.T) {
	secret := []byte("test-secret")

	t.Run("should decode token generated by encode", func(t *testing.T) {
		jwt := jwtStruct{Name: "testName"}
		token, err := Encode("claims", secret, time.Minute, jwt)
		if err != nil {
			t.Fatal(err)
		}

		var loaded jwtStruct
		if err := Decode("claims", secret, []byte(token), &loaded); err != nil {
			t.Fatal(err)
		}

		if loaded.Name != "testName" {
			t.Errorf("Expected Name to be %s, got %s", "Olakunle", loaded.Name)
		}
	})

	t.Run("should decode token generated externally", func(t *testing.T) {
		// don't use this token it would fail.
		token := "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiY2xhaW0iOnsibmFtZSI6InRva2VuIn0sImV4cCI6MTU5OTUyODEwNSwiaWF0IjoxNTE2MjM5MDIyfQ.-u5OhBHdq7L_wBlI2cBjstOXyhRS2m27bx1tLN869so"

		var loaded jwtStruct
		if err := Decode("claim", secret, []byte(token), &loaded); err != nil {
			t.Fatal(err)
		}

		if loaded.Name != "token" {
			t.Errorf("Expected Name to be %s, got %s", "Olakunle", loaded.Name)
		}
	})
}
